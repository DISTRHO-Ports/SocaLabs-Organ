################################################################
##
## The MIDI device to receive events from.
##
## possible values for midi.driver: alsa, jack - case insensitive
## defaults to "jack"
midi.driver=jack
##
## midi port to auto-connect to. Default: none
## with ALSA-MIDI-Sequencer this is usually a numeric value
## JACK-midi accepts regular expressions.
#midi.port=
##
##
################################################################
#
# JACK Audio Ports
#
################################################################
##
## JACK audio ports to auto-connect to.
##
## you can either specify exact port names for left/right channels
## e.g. "system:playback_6"
## or if both jack.out.left and jack.out.right are unset,
## a regular expression to autoconnect to
#jack.out.left=
#jack.out.right=
##
## this is only used of jack.out.* are unset:
## by default the organ connects to the first two physical outputs:
#jack.connect=system:playback_
##
##
################################################################
##
## MIDI controllers
##
## This parameter allows you to define how MIDI controllers are mapped
## to controllable functions in setBfree. The syntax is:
##
#midi.controller.<manual>.<nn>=<name>
##
##
## Where <manual> is one of 'upper', 'lower' or 'pedals',
## <nn> is the numerical controller number, and
## <name> is the name of the controllable function.
##
## Example 1, to assign the 16' drawbar on the lower manual to controller
## number 70 on the channel assigned to the upper manual, enter:
##
midi.controller.upper.91=upper.drawbar16
midi.controller.upper.93=upper.drawbar513
midi.controller.upper.70=upper.drawbar8	
midi.controller.upper.71=upper.drawbar4
midi.controller.upper.115=upper.drawbar223
midi.controller.upper.116=upper.drawbar2
midi.controller.upper.117=upper.drawbar135
midi.controller.upper.118=upper.drawbar113
midi.controller.upper.7=upper.drawbar1

midi.controller.upper.74=percussion.enable
midi.controller.upper.25=rotary.speed-toggle
midi.controller.upper.119=vibrato.knob
midi.controller.upper.79=vibrato.routing
midi.controller.upper.85=rotary.speed-preset
midi.controller.upper.102=overdrive.character

## Example 2, assign the sustain pedal (controller 64) to control the
## rotary effect on all three manuals:
##
#midi.controller.upper.64=rotary.speed-toggle
#midi.controller.lower.64=rotary.speed-toggle
#midi.controller.pedals.64=rotary.speed-toggle
##
##
################################################################
##
## Master tuning
## The reference frequency, in Hertz.
##
#osc.tuning=440.0
##
##
## Tuning temperament.
## The original instrument uses a mechanical tone generator where pitches
## approximate equal temperament through integer gear ratios. The gear
## ratios in setBfree are based on the 60 Hz/1200 rpm motor. The 50 Hz/1500 rpm
## tone generator has different ratios and can be selected, but the rations are
## my own guesstimates.
## As an alternative, equal temperament based on 2**(n/12) can be choosen.
## gear60 is the default value.
##
#osc.temperament=gear60
#osc.temperament=gear50
#osc.temperament=equal
##
##
################################################################
## --- PERCUSSION ---
##
## Fast percussion decay time in seconds.
##
#osc.perc.fast=1.0
##
##
## Slow percussion decay time in seconds.
##
#osc.perc.slow=4.0
##
##
## Basic volume of the percussion signal, applies to both normal and soft.
##
#osc.perc.gain=3.0
##
##
## Normal percussion amplification
##
#osc.perc.normal=1.0
##
##
## Soft percussion amplification
##
#osc.perc.soft=0.5012
##
##
## Percussion signal bus select. Selects the signal buses used for
## second (a) and third (b) percussion sounds. Accepted values 0-8.
##
#osc.perc.bus.a=3
#osc.perc.bus.b=4
##
##
## Percussion trigger bus select. Selects the bus to be muted when
## percussion is enabled. Accepted values 0-8 and -1 to disable (no
## bus is muted by percussion).
##
#osc.perc.bus.trig=8
##
##
##
################################################################
##
## Vibrato scanner
##
################################################################
##
## Sets the frequency of the vibrato scanner.
##
#scanner.hz=7
##
## The amount of modulation for each the vibrato/chorus settings.
## (These settings may be a bit on the conservative side.)
##
#scanner.modulation.v1=1.0
#scanner.modulation.v2=2.5
#scanner.modulation.v3=5.0
##
##
################################################################
##
## Amplifier simulator
##
## NOTE: The amp.* parameters are not available in this version.
##
################################################################
##
##
## --- OVERDRIVE ---
##
## This is how much the input signal is scaled as it enters the overdrive
## effect. The default value (3.56) is quite hot, but you can of course
## try it in anyway you like. [This parameter is also available on the
## MIDI controller function name 'overdrive.inputgain', default 21 on upper.]
##
#overdrive.inputgain=3.5675
##
##
## This is how much the signal is scaled as it leaves the overdrive effect.
## Essentially this value should be as high as possible without clipping
## (and you *will* notice when it does). Test with a bass-chord on 88 8888 000
## with percussion enabled and full swell (mod controller), but do turn down
## the amplifier/headphone volume first! [MIDI controller function name
## 'overdrive.outputgain', default 22 on upper.]
##
#overdrive.outputgain=0.8795
##
##
## The following parameters are experimental and are therefore likely to be
## removed/renamed/replaced in future versions:
##
## fb1: This parameter behaves somewhat like an analogue tone control for
##      bass mounted before the overdrive stage. Unity is somewhere around
##      the value 0.6, lesser values takes away bass and lowers the volume
##      while higher values gives more bass and more signal into the over-
##      drive. Must be less than 1.0. [MIDI controller function name
##      'xov.ctl_biased_fb', default 9 on upper.]
##
#xov.ctl_biased_fb=0.5821
##
##
## fb2: The fb2 parameter has the same function as fb1 but
##      controls the signal after the overdrive stage. Together the two
##      parameters are useful in that they can reduce the amount of bass
##      going into the overdrive and then recover it on the other side.
##      Must be less than 1.0. [MIDI controller function name 
##      'xov.ctl_biased_fb2', default 14 on upper.]
##
#xov.ctl_biased_fb2=0.999
##
##
## sagfb: This parameter is part of an attempt to recreate an artefact
##        called 'power sag'. When a power amplifier is under heavy load the
##        voltage drops and alters the operating parameters of the
##        unit, usually towards more and other kinds of distortion. The
##        sagfb parameter controls the rate of recovery from the sag effect
##        when the load is lifted. Must be less than 1.0.
##
#xov.ctl_sagtobias=0.991
##
##
################################################################
##
## Rotary speaker simulator
##
################################################################
##
## The slow rotation speed of the horn in revolutions per minute. 
##
#whirl.horn.slowrpm=40.32
##
##
## The fast rotation speed of the horn in revolutions per minute. 
##
#whirl.horn.fastrpm=423.36
##
##
## The spool-up rate of the horn; time constant - seconds
## Time required to accelerate reduced by a factor exp(1) = 2.718..
##
#whirl.horn.acceleration=0.161
##
##
## The spool-down rate of the horn; time constant - seconds
## Time required to decelerate reduced by a factor exp(1) = 2.718..
##
#whirl.horn.deceleration=0.321
##
##
## The slow rotation speed of the drum in revolutions per minute. 
##
#whirl.drum.slowrpm=36.0
##
##
## The fast rotation speed of the drum in revolutions per minute. 
##
#whirl.drum.fastrpm=357.3
##
##
## The spool-up rate of the drum; time constant - seconds
## Time required to accelerate reduced by a factor exp(1) = 2.718..
##
#whirl.drum.acceleration=4.127
##
##
## The spool-down rate of the drum; time constant - seconds
## Time required to decelerate reduced by a factor exp(1) = 2.718..
##
#whirl.drum.deceleration=1.371
##
##
## The radius of the horn in centimeters (1 cm = 2.54 inches).
##
#whirl.horn.radius=17.0
##
##
## The radius of the drum in centimeters.
##
#whirl.drum.radius=22.0
##
##
## The volume at which the horn is mixed in with the drum sound.
##
#whirl.horn.level=0.7
##
##
## The fraction of the horn level that leaks off the base of the horn.
## It is band-pass filtered, but not subjected to Doppler effect or delay.
## The value is multiplied by whirl.horn.level before it is applied.
##
#whirl.horn.leak=0.15
##
##
## The drum low-pass IIR filter specification (see eqcomp.h).
## This is a actually a high-shelf filter with negative gain in the
## passband.
##
#whirl.drum.filter.type=8
#whirl.drum.filter.hz=811.9695
#whirl.drum.filter.q=1.6016
#whirl.drum.filter.gain=-38.9291
##
##
## The horn filter is implemented with two IIR filters followed by
## two comb filters with feedback. The IIR filters give the basic band-pass
## shape of the driver and horn, while the comb filters break up the
## frequency response and gives some characteristic resonance of the
## physical system. The IIR filters are not in band-pass configuration,
## but consists of a low-pass stage followed by a low-shelf with negative
## gain. The band-pass response is created where the two filters overlap.
##
## The a horn IIR filter specification (see eqcomp.h). Note that the gain
## parameter does not apply to type 0.
##
#whirl.horn.filter.a.type=0
#whirl.horn.filter.a.hz=4500.0
#whirl.horn.filter.a.q=2.7456
#whirl.horn.filter.a.gain=-30.0
##
##
## The b horn IIR filter specification (see eqcomp.h). 
##
#whirl.horn.filter.b.type=7
#whirl.horn.filter.b.hz=300.0
#whirl.horn.filter.b.q=1.0
#whirl.horn.filter.b.gain=-30.0
##
##
## The a horn comb filter. The delay unit is integer nof samples.
##
#whirl.horn.comb.a.feedback=-0.55
#whirl.horn.comb.a.delay=38
##
##
## The b horn comb filter.
##
#whirl.horn.comb.b.feedback=-0.3508
#whirl.horn.comb.b.delay=120
##
##
##################################################################
##
## Reverb
##
##################################################################
##
## Sets the amount of dry (non-reverberated) output from the reverb.
##
#reverb.dry=0.7
##
##
## Sets the amount of wet (reverberated) output from the reverb.
##
#reverb.wet=0.3
##
